# docker-compose-prod.yml
version: '3'

services:
  web:
    container_name: imindex-web-1
    build: .
    command: /bin/bash -c "python manage.py compilemessages && python manage.py collectstatic --noinput && chmod +x _for_deploy/wait-for-db.sh && _for_deploy/wait-for-db.sh db && python manage.py migrate && python manage.py imindex_install && gunicorn mysite.wsgi:application --bind 0.0.0.0:8000"
    restart: always
    volumes:
      - .:/code
#      - ./logs/:/code/logs/
    ports:
      - "8000:8000"
#      - "80:8000"
    environment:
      SECRET_KEY: kNU9dV9SQYZyy1F3pSKw1KyvdeNuer07
      DJANGO_DEBUG: False
      DB_NAME: pgdb
      DB_USER: pgdb
      DB_PASSWORD: pgpass
    depends_on:
      - db
      - redis

  flower:
    restart: always
    image: mher/flower
    environment:
      - CELERY_BROKER_URL=redis://:RDFGDxpI1h@redis:6379/1
      - FLOWER_BASIC_AUTH=${FLOWER_BASIC_AUTH}
    command: ["celery", "flower", "--broker=redis://redis:6379/1", "--basic_auth=${FLOWER_BASIC_AUTH}"]
    ports:
      - "5555:5555"

  nginx:
    restart: always
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./letsencrypt/:/etc/letsencrypt/
#      - certbot-www:/var/www/certbot
    depends_on:
      - web
#      - certbot

#  certbot:
#    image: certbot/certbot
#    volumes:
#      - letsencrypt:/etc/letsencrypt
#      - certbot-www:/var/www/certbot
#    entrypoint: /bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $$!; done;'

  celery:
    restart: always
    container_name: imindex-celery-1
    build: .
    command: celery -A mysite worker --loglevel=info -c 20 -O fair
    volumes:
      - .:/code
    environment:
      SECRET_KEY: kNU9dV9SQYZyy1F3pSKw1KyvdeNuer07
      DB_NAME: pgdb
      DB_USER: pgdb
      DB_PASSWORD: pgpass
    depends_on:
      - web
      - db
      - redis

  cron:
    restart: always
    build: .
    volumes:
      - .:/code
      - ./_for_deploy/django_cron_job:/etc/cron.d/django_cron_job
    command: cron -f
    depends_on:
      - web

  db:
    container_name: imindex-db-1
    image: postgres
    restart: always
    volumes:
      - ./data/pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: pgdb
      POSTGRES_USER: pgdb
      POSTGRES_PASSWORD: pgpass
    ports:
      - "5432:5432"

  redis:
    container_name: imindex-redis-1
    image: redis
    restart: always
    volumes:
      - ./data/redisdata:/data
      - ./_for_deploy/redis.conf:/usr/local/etc/redis/redis.conf
    ports:
      - "6379:6379"
    command: redis-server /usr/local/etc/redis/redis.conf

volumes:
  letsencrypt:
  certbot-www:
