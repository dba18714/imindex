# Generated by Django 5.0 on 2023-12-29 10:40

from django.db import migrations
from django.db.models import Count, F
from django.db.models.expressions import RawSQL


def remove_duplicate_links(apps, schema_editor):
    Link = apps.get_model('ims', 'Link')

    # 使用 RawSQL 来创建一个大小写不敏感的临时字段
    duplicate_urls = (
        Link.objects
        .annotate(lower_url=RawSQL("LOWER(url)", []))
        .values("lower_url")
        .annotate(url_count=Count("id"))
        .filter(url_count__gt=1)
    )

    for duplicate in duplicate_urls:
        # 获取重复 URL 中的所有记录，并按 id 排序
        links = Link.objects.filter(url__iexact=duplicate['lower_url']).order_by('id')

        # 删除除了第一个以外的所有重复记录
        for link in links[1:]:
            link.delete()


class Migration(migrations.Migration):
    dependencies = [
        ('ims', '0010_search'),
    ]

    operations = [
        migrations.RunPython(remove_duplicate_links, reverse_code=migrations.RunPython.noop),
        migrations.RunSQL(
            "CREATE UNIQUE INDEX idx_unique_url_lower ON ims_link (LOWER(url));",
            "DROP INDEX idx_unique_url_lower;"
        ),
    ]
